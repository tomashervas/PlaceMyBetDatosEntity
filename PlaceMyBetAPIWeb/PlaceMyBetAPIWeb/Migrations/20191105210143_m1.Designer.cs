// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaceMyBetAPIWeb.Models;

namespace PlaceMyBetAPIWeb.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20191105210143_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Apuesta", b =>
                {
                    b.Property<int>("apuestaID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("cuota");

                    b.Property<double>("dinero");

                    b.Property<string>("mercado");

                    b.Property<int>("mercadoID");

                    b.Property<string>("tipo");

                    b.Property<int>("usuarioID");

                    b.HasKey("apuestaID");

                    b.HasIndex("mercadoID");

                    b.HasIndex("usuarioID");

                    b.ToTable("Apuestas");
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Cuenta", b =>
                {
                    b.Property<int>("cuentaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("banco");

                    b.Property<double>("saldo");

                    b.Property<string>("tarjeta");

                    b.Property<int>("usuarioID");

                    b.HasKey("cuentaID");

                    b.HasIndex("usuarioID")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Evento", b =>
                {
                    b.Property<int>("eventoID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("fechaHoraEvento");

                    b.Property<string>("local");

                    b.Property<string>("visitante");

                    b.HasKey("eventoID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Mercado", b =>
                {
                    b.Property<int>("mercadoID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("cuotaOver");

                    b.Property<double>("cuotaUnder");

                    b.Property<double>("dineroOver");

                    b.Property<double>("dineroUnder");

                    b.Property<int>("eventoID");

                    b.Property<string>("mercado");

                    b.HasKey("mercadoID");

                    b.HasIndex("eventoID");

                    b.ToTable("Mercados");
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("apellidos");

                    b.Property<int>("edad");

                    b.Property<string>("email");

                    b.Property<string>("nombre");

                    b.Property<double>("saldo");

                    b.HasKey("usuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Apuesta", b =>
                {
                    b.HasOne("PlaceMyBetAPIWeb.Models.Mercado", "Mercado")
                        .WithMany("Apuesta")
                        .HasForeignKey("mercadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PlaceMyBetAPIWeb.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Cuenta", b =>
                {
                    b.HasOne("PlaceMyBetAPIWeb.Models.Usuario", "Usuario")
                        .WithOne("Cuenta")
                        .HasForeignKey("PlaceMyBetAPIWeb.Models.Cuenta", "usuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlaceMyBetAPIWeb.Models.Mercado", b =>
                {
                    b.HasOne("PlaceMyBetAPIWeb.Models.Evento", "Evento")
                        .WithMany("Mercados")
                        .HasForeignKey("eventoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
